/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
 void f(int ind, int level, TreeNode* root, map<int,int>& mp) {
        if (!root) return;
        
        if(mp.find(level)==mp.end()){
            mp[level] = root->val;
        } 
        f(ind - 1, level + 1, root->right, mp);
        f(ind + 1, level + 1, root->left, mp);
    }

    
    vector<int> rightSideView(TreeNode* root) {
         map<int, int> mp; 
        f(0, 0, root, mp);
        
        vector<int> ans;
        for (auto& v : mp) {
            ans.push_back(v.second); // Push the node value
        }
        return ans;
    }
};
